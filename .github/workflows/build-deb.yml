name: Build debian package for submodule

on:
  workflow_dispatch:
    inputs:
      package:
        description: "The package to build"
        required: true
        default: "pve-manager"
        type: string
  workflow_call:
    inputs:
      package:
        description: "The package to build"
        required: true
        default: "pve-manager"
        type: string

permissions:
  # for ghcr.io (docker registry):
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          sed -i -e 's|git@github.com:|https://github.com/|' .gitmodules # switch from ssh to https because we don't have ssh keys in the pipeline
          git submodule update --init submodules/${{ inputs.package }}

          if [ -f submodules/${{ inputs.package }}.changelog.patch ]; then
            pushd submodules/${{ inputs.package }}
            patch -p1 -u --no-backup-if-mismatch --reject-file=/dev/null -i ../${{ inputs.package }}.changelog.patch || rm ../${{ inputs.package }}.changelog.patch
            popd
          fi

          echo "::group::Add tag to submodule"
          GIT_SUBJECT=$(git log -1 --pretty=format:%s -- submodules/${{ inputs.package }}.patch)
          GIT_AUTHOR=$(git log -1 --pretty=format:%an -- submodules/${{ inputs.package }}.patch)
          GIT_EMAIL=$(git log -1 --pretty=format:%ae -- submodules/${{ inputs.package }}.patch)
          docker run --rm \
            -v .:/src \
            -w /src/submodules/${{ inputs.package }} \
            -e DEBEMAIL="$GIT_EMAIL" \
            -e DEBFULLNAME="$GIT_AUTHOR" \
            ghcr.io/hwinther/wsh-pve/pve-build:12 \
            dch -l +wsh -D bookworm "$GIT_SUBJECT"
          echo -e "\n\n\n\n*********************************\n\nChangelog entries related to WSH:\n\n"
          grep -A4 "\+wsh" submodules/${{ inputs.package }}/debian/changelog
          echo -e "\n\n*********************************\n\n\n\n"
          WSH_VERSION=$(grep "\+wsh" submodules/${{ inputs.package }}/debian/changelog | head -1 | sed -E "s/^.*\(([0-9a-z\.\+\-]+)\).*$/\1/; s/\+/\-/")
          echo "WSH_VERSION=$WSH_VERSION"
          echo "::endgroup::"

          tag_wsh_version=ghcr.io/hwinther/wsh-pve/${{ inputs.package }}:$WSH_VERSION
          tag_latest=ghcr.io/hwinther/wsh-pve/${{ inputs.package }}:latest

          sudo make ${{ inputs.package == 'pve-qemu' && 'pve-qemu-bundle' || inputs.package }} VERBOSE=2 DOCKER='docker' DOCKER_ARG='--user root'

          ls -la build/*
          buildPath=$(realpath build)
          echo podman build . -f submodules/${{ inputs.package }}.Dockerfile -v $buildPath:/build -t $tag_wsh_version -t $tag_latest
          podman build . -f submodules/${{ inputs.package }}.Dockerfile -v $buildPath:/build -t $tag_wsh_version -t $tag_latest
          podman push $tag_wsh_version
          podman push $tag_latest

          git pull
          pushd submodules/${{ inputs.package }}
          git diff -p -U10 debian/changelog > ../${{ inputs.package }}.changelog.patch
          popd
          git add submodules/${{ inputs.package }}.changelog.patch
          git commit -m "Update changelog for ${{ inputs.package }}"
          git push origin

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ inputs.package }}
          path: build/
